#include<stdio.h>
int main(){
int siz,i,val1,val2,ch,k;
printf("Enter size of graph :");
scanf("%d",&siz);
printf("Enter %d elements to the graph :\n",siz);
int grarr[siz],adjmx[siz][siz],transpose[siz][siz];
//create adjacent zero
for(i=0;i<siz;i++){
for(k=0;k<siz;k++)
{
adjmx[i][k]=0;
transpose[i][k]=0;
}
}

for(i=0;i<siz;i++){ 
    scanf("%d",&grarr[i]);
}

printf("Connect Elements\n");
while(1){
printf("Enter start and end vertices of an edge \n");
scanf("%d",&val1);
scanf("%d",&val2);

for(i=0;i<siz;i++){ 
    if(grarr[i]==val1)
        break;
}
for(k=0;k<siz;k++){ 
    if(grarr[k]==val2)
        break;
}
if(i==siz || k==siz ){ continue;}
else{  adjmx[i][k]=1; transpose[k][i]=1;; }
printf("Enter 0 to stop otherwise enter any number\n");
scanf("%d",&ch);
if(ch==0)
   break;

}

/*printf(" graph in adjacency matrix form \n ");
printf("  ");
for(i=0;i<siz;i++){ 
    printf("%d  ",grarr[i]);
}
printf("\n");
//print adj matrix
for(i=0;i<siz;i++){
printf("%d  ",grarr[i]);
for(k=0;k<siz;k++)
{
printf("%d  ",adjmx[i][k]);
}
printf("\n");
}

printf(" graph in adjacency matrix transpose form \n ");
printf("  ");
for(i=0;i<siz;i++){ 
    printf("%d  ",grarr[i]);
}
printf("\n");
//print adj matrix
for(i=0;i<siz;i++){
printf("%d  ",grarr[i]);
for(k=0;k<siz;k++)
{
printf("%d  ",transpose[i][k]);
}
printf("\n");
}

*/


printf("\nStrongly connected Component are\n");
//dfs
int sta[siz],vis[siz];
for(k=0;k<siz;k++)
{
vis[k]=0;
}
int top=-1,n,count=1;
i=0;
top++;
vis[i]=1;
sta[top]=grarr[i];
printf("DFS of component %d---> %d  ",count,sta[top]);
while(top>=0){
n=0;
for(k=0;k<siz;k++){  
if(transpose[i][k]==1  &&  vis[k]==0){  top++; vis[k]=1;sta[top]=grarr[k];n=1; printf("%d  ",sta[top]);break;}
 }
if(n==0)
{  top--; }


  for(int q=0;q<siz;q++)
    {
  if(grarr[q]==sta[top]){ i=q;break;}
     }
if(top<0){
    for(i=0;i<siz;i++)
    {
        if(vis[i]==0){ 
            count++;
            top++;
        sta[top]=grarr[i];
        printf("\nDFS of component%d---> %d  ",count,sta[0]);
        
        vis[i]=1;
        break;}
    }
}


}

}